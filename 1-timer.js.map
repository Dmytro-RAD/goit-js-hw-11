{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/themes/dark.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('.start-btn');\nconst textInput = document.querySelector('#datetime-picker');\n\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (selectedDate <= new Date()) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        position: 'topCenter',\n        color: 'red',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n      userSelectedDate = selectedDate;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nlet intervalId;\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  textInput.disabled = true;\n\n  intervalId = setInterval(() => {\n    const currentTime = new Date();\n    const differTime = userSelectedDate - currentTime;\n\n    if (differTime <= 0) {\n      clearInterval(intervalId);\n      textInput.disabled = false;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(differTime);\n\n    daysSpan.textContent = String(days).padStart(2, '0');\n    hoursSpan.textContent = String(hours).padStart(2, '0');\n    minutesSpan.textContent = String(minutes).padStart(2, '0');\n    secondsSpan.textContent = String(seconds).padStart(2, '0');\n  }, 1000);\n});\n\nfunction convertMs(differTime) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(differTime / day);\n  const hours = Math.floor((differTime % day) / hour);\n  const minutes = Math.floor(((differTime % day) % hour) / minute);\n  const seconds = Math.floor((((differTime % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["startBtn","textInput","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","options","selectedDates","selectedDate","iziToast","flatpickr","intervalId","differTime","days","hours","minutes","seconds","convertMs"],"mappings":"2GAMA,MAAMA,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAY,SAAS,cAAc,kBAAkB,EAErDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEhCC,GAAgB,IAAI,MACtBC,EAAS,KAAK,CACZ,QAAS,qCACT,SAAU,YACV,MAAO,KACf,CAAO,EACDV,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBM,EAAmBG,EAEtB,CACH,EAEAE,EAAU,mBAAoBJ,CAAO,EAErC,IAAIK,EAEJZ,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAU,SAAW,GAErBW,EAAa,YAAY,IAAM,CAE7B,MAAMC,EAAaP,EADC,IAAI,KAGxB,GAAIO,GAAc,EAAG,CACnB,cAAcD,CAAU,EACxBX,EAAU,SAAW,GACrB,MACD,CAED,KAAM,CAAE,KAAAa,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAU,EAE9DX,EAAS,YAAc,OAAOY,CAAI,EAAE,SAAS,EAAG,GAAG,EACnDX,EAAU,YAAc,OAAOY,CAAK,EAAE,SAAS,EAAG,GAAG,EACrDX,EAAY,YAAc,OAAOY,CAAO,EAAE,SAAS,EAAG,GAAG,EACzDX,EAAY,YAAc,OAAOY,CAAO,EAAE,SAAS,EAAG,GAAG,CAC1D,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUL,EAAY,CAM7B,MAAMC,EAAO,KAAK,MAAMD,EAAa,KAAG,EAClCE,EAAQ,KAAK,MAAOF,EAAa,MAAO,IAAI,EAC5CG,EAAU,KAAK,MAAQH,EAAa,MAAO,KAAQ,GAAM,EACzDI,EAAU,KAAK,MAASJ,EAAa,MAAO,KAAQ,IAAU,GAAM,EAE1E,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}